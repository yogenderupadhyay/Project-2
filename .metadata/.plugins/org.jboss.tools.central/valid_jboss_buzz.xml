<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Keycloak 4.2.0.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/YVIkofnLZIM/keycloak-420final-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Marek Posolda</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_4_2_0_final_released</id><updated>2018-08-01T13:44:41Z</updated><published>2018-08-01T13:44:00Z</published><content type="html">&lt;p&gt;To download the release go to the &lt;a href="http://www.keycloak.org/downloads"&gt;Keycloak homepage&lt;/a&gt;. &lt;p&gt;For details on what is included in the release check out the &lt;a href="https://www.keycloak.org/docs/latest/release_notes/index.html"&gt;Release notes&lt;/a&gt; &lt;p&gt;The full list of resolved issues is available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%204.2.0.Final"&gt;JIRA&lt;/a&gt;. &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="http://www.keycloak.org/docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/YVIkofnLZIM" height="1" width="1" alt=""/&gt;</content><summary>To download the release go to the Keycloak homepage. For details on what is included in the release check out the Release notes The full list of resolved issues is available in JIRA. Before you upgrade remember to backup your database and check the upgrade guide for anything that may have changed.</summary><dc:creator>Marek Posolda</dc:creator><dc:date>2018-08-01T13:44:00Z</dc:date><feedburner:origLink>http://blog.keycloak.org/2018/08/keycloak-420final-released.html</feedburner:origLink></entry><entry><title>RESTEasy Spring Boot starter 2.0.0.Final</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/RBJdOWdk4UI/resteasy-spring-boot-starter-200final" /><category term="feed_group_name_resteasy" scheme="searchisko:content:tags" /><category term="feed_name_resteasy" scheme="searchisko:content:tags" /><category term="JAX-RS" scheme="searchisko:content:tags" /><category term="jaxrs" scheme="searchisko:content:tags" /><category term="resteasy" scheme="searchisko:content:tags" /><category term="springboot" scheme="searchisko:content:tags" /><author><name>Alessio Soldano</name></author><id>searchisko:content:id:jbossorg_blog-resteasy_spring_boot_starter_2_0_0_final</id><updated>2018-07-31T14:18:16Z</updated><published>2018-07-31T14:18:00Z</published><content type="html">&lt;!-- [DocumentBodyStart:0cfcca8f-43d7-48d1-affa-2ae3d7f7d96d] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;A couple of months ago, we &lt;a class="jive-link-blog-small" data-containerId="1100" data-containerType="37" data-objectId="6188" data-objectType="38" href="https://developer.jboss.org/community/resteasy/blog/2018/05/23/resteasy-spring-boot-starter-has-moved"&gt;announced&lt;/a&gt; the move of the &lt;strong&gt;RESTEasy Spring Boot starter&lt;/strong&gt; to &lt;a class="jive-link-external-small" href="https://github.com/resteasy/resteasy-spring-boot" rel="nofollow"&gt;RESTEasy organization on GitHub&lt;/a&gt;. We also mentioned that soon a new version of the starter would have been available... and here we are today, presenting &lt;a class="jive-link-external-small" href="https://github.com/resteasy/resteasy-spring-boot/tree/2.0.0.Final" rel="nofollow"&gt;release 2.0.0.Final&lt;/a&gt;, which&lt;/p&gt;&lt;ul&gt;&lt;li&gt;integrates &lt;strong&gt;Spring Boot 2&lt;/strong&gt; (currently 2.0.3.RELEASE version)&lt;/li&gt;&lt;li&gt;relies on the latest RESTEasy 3.x series (currently &lt;em&gt;3.6.0.Final&lt;/em&gt; version).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The artifacts are available on Maven central repository, as well as the JBoss repository. &lt;span style="text-decoration: underline;"&gt;Feel free to pull them and give them a try.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Enjoy!&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:0cfcca8f-43d7-48d1-affa-2ae3d7f7d96d] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/RBJdOWdk4UI" height="1" width="1" alt=""/&gt;</content><summary>A couple of months ago, we announced the move of the RESTEasy Spring Boot starter to RESTEasy organization on GitHub. We also mentioned that soon a new version of the starter would have been available... and here we are today, presenting release 2.0.0.Final, which integrates Spring Boot 2 (currently 2.0.3.RELEASE version) relies on the latest RESTEasy 3.x series (currently 3.6.0.Final version). Th...</summary><dc:creator>Alessio Soldano</dc:creator><dc:date>2018-07-31T14:18:00Z</dc:date><feedburner:origLink>https://developer.jboss.org/community/resteasy/blog/2018/07/31/resteasy-spring-boot-starter-200final</feedburner:origLink></entry><entry><title>Natively compile Java code for better startup time</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/DwPuT0Kxk-o/" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Graal" scheme="searchisko:content:tags" /><category term="GraalVM" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="performance" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><category term="startup time" scheme="searchisko:content:tags" /><category term="Substrate VM" scheme="searchisko:content:tags" /><author><name>Faisal Masood</name></author><id>searchisko:content:id:jbossorg_blog-natively_compile_java_code_for_better_startup_time</id><updated>2018-07-30T16:15:02Z</updated><published>2018-07-30T16:15:02Z</published><content type="html">&lt;p&gt;Microservices and serverless architectures are being implemented, or are a part of the roadmap, in most modern solution stacks. Given that Java is still the dominant language for business applications, the need for reducing the startup time for Java is becoming more important. Serverless architectures are one such area that needs faster startup times, and applications hosted on container platforms such as &lt;a href="https://www.openshift.com/"&gt;Red Hat Openshift&lt;/a&gt; can benefit from both fast Java startup time and a smaller Docker image size.&lt;/p&gt; &lt;p&gt;Let’s see how &lt;a href="https://www.graalvm.org"&gt;GraalVM&lt;/a&gt; can be beneficial for Java-based programs in terms of speed and size improvements. Surely, these gains are not bound to containers or serverless architectures and can be applied to a variety of use cases.&lt;/p&gt; &lt;p&gt;&lt;span id="more-510617"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;GraalVM allows you to compile a program ahead of time into a native executable. The resulting program does not run on the Java HotSpot VM, but instead uses necessary components such as memory management and thread scheduling from a different implementation of a virtual machine called Substrate VM. Substrate VM is written in Java and compiled into the native executable. The resulting program has faster startup time and less runtime memory overhead compared to a Java VM. (This definition is referenced from the Graal website).&lt;/p&gt; &lt;p&gt;This article compares the following metrics:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;JVM startup time with &lt;a href="https://github.com/oracle/graal/releases"&gt;GraalVM RC4&lt;/a&gt; versus &lt;a href="http://jdk.java.net/10/"&gt;OpenJDK 10&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The bare minimum Docker image sizes needed for running the uberjar versus the native binary&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The complete code for this exercise is available in this &lt;a href="https://github.com/masoodfaisal/need4speed"&gt;repository&lt;/a&gt;. The Netty-related part of this repository is made available by Codrut Stancu via his excellent &lt;a href="https://medium.com/graalvm/instant-netty-startup-using-graalvm-native-image-generation-ed6f14ff7692"&gt;blog&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This project uses the following tools:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/oracle/graal/releases"&gt;Graal&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://netty.io/"&gt;Netty&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://mongodb.github.io/mongo-java-driver-reactivestreams/1.9/"&gt;Mongo Reactive Streams&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://projectreactor.io/"&gt;Project Reactor&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/tsenart/vegeta"&gt;Vegeta&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Let’s first compare the startup time.&lt;/p&gt; &lt;h2&gt;Startup time&lt;/h2&gt; &lt;p&gt;The startup time is measured as the time difference between the program start and when the program is ready to take requests. It is very encouraging to see that the native compiled image brings us an average startup time of ~17 milliseconds compared to an average of ~850 milliseconds with the JVM.&lt;/p&gt; &lt;p&gt;This improvement warrants using the Graal native image for applications that need fast startup times, for example, serverless architectures and containers. However, the native compilation has some &lt;a href="https://github.com/oracle/graal/blob/master/substratevm/REFLECTION.md"&gt;specific restrictions&lt;/a&gt;, especially around the use of reflection and dynamic class loading. This makes it harder (at least for now) to move all applications to native binaries, but with every release of Graal, compatibility is improving.&lt;/p&gt; &lt;p&gt;The other notable metric is that the size of the native image is almost double the size of the uberjar. The uberjar is about 7.0MB while the native binary is approximately 15MB. Keep in mind that the uberjar needs the Java runtime to be operational, as you shall see in the &amp;#8220;Container size&amp;#8221; section below, while with the native image, the size of the Docker container is smaller than that with the uberjar container.&lt;/p&gt; &lt;div id="attachment_510627" style="width: 547px" class="wp-caption aligncenter"&gt;&lt;img class="wp-image-510627" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/JVM-Startuptimes-300x188.png" alt="JVM startup time" width="537" height="337" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/JVM-Startuptimes-300x188.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/JVM-Startuptimes-768x481.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/JVM-Startuptimes-1024x641.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/JVM-Startuptimes.png 1210w" sizes="(max-width: 537px) 100vw, 537px" /&gt;&lt;p class="wp-caption-text"&gt;JVM startup time comparison&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Setup&lt;/h4&gt; &lt;p&gt;If you want to run this application locally, make sure that the &lt;code&gt;MONGO_IP&lt;/code&gt; (which defines the IP address of the MongoDB database) and &lt;code&gt;DIE&lt;/code&gt; environment variables are set. If &lt;code&gt;DIE&lt;/code&gt; is set to any value, this application will terminate as soon as it starts completely. To run the application, you need to unset this variable. If the &lt;code&gt;DIE&lt;/code&gt; variable is unset, the application will start and take requests. The application can be accessed via http://localhost:8080/.&lt;/p&gt; &lt;p&gt;To run the application locally, do the following:&lt;/p&gt; &lt;pre&gt;$ git clone https://github.com/masoodfaisal/need4speed.git $ cd netty-mongo-native $ mvn clean install $ export MONGO_IP=127.0.0.1 $ export DIE=true #or unset DIE if you want the application to stay alive $ time java -jar target/netty-mongo-native-full.jar&lt;/pre&gt; &lt;p&gt;The full binary of the application is made available via the following command. Make sure that Graal is available on your local machine.&lt;strong&gt;&lt;br /&gt; &lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;em&gt;native-image&lt;/em&gt; -jar target/netty-mongo-native-full.jar \ -H:ReflectionConfigurationResources=netty_reflection_config.json \ -H:Name=netty-svm-http-server \ -H:+ReportUnsupportedElementsAtRuntime &lt;/pre&gt; &lt;p&gt;The startup time is measured with the new &lt;a href="http://openjdk.java.net/jeps/317"&gt;JVM compiler interface&lt;/a&gt; (JVMCI) options available from JDK 9. The measured time reported here is recorded with the following JVM flags:&lt;/p&gt; &lt;pre&gt;-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCI&lt;/pre&gt; &lt;p&gt;Note that no measurements have been captured via &lt;a href="http://openjdk.java.net/jeps/295"&gt;ahead-of-time compilation&lt;/a&gt; (AOTC), and it would be interesting to see what changes AOTC brings to the mix.&lt;/p&gt; &lt;h2&gt;Container size&lt;/h2&gt; &lt;p&gt;The Docker image for the natively compiled artifact is less than half the size of the container with the JRE. Native compilation provides great savings in the Docker image size, and this could be a big win for container environments such as Kubernetes.&lt;/p&gt; &lt;div id="attachment_510647" style="width: 547px" class="wp-caption aligncenter"&gt;&lt;img class="wp-image-510647" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/Screen-Shot-2018-07-24-at-09.15.52-300x187.png" alt="Container size comparison" width="537" height="335" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/Screen-Shot-2018-07-24-at-09.15.52-300x187.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/Screen-Shot-2018-07-24-at-09.15.52-768x479.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/Screen-Shot-2018-07-24-at-09.15.52-1024x638.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/Screen-Shot-2018-07-24-at-09.15.52.png 1216w" sizes="(max-width: 537px) 100vw, 537px" /&gt;&lt;p class="wp-caption-text"&gt;Container size comparison&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Setup&lt;/h4&gt; &lt;p&gt;The &lt;a href="https://registry.fedoraproject.org"&gt;fedora-minimal base image&lt;/a&gt; is being used as the runtime for the JVM and native images. The sizes shown in the metrics above are the from SIZE column of the &lt;code&gt;docker images&lt;/code&gt; command.&lt;/p&gt; &lt;p&gt;All Docker files are available in the source repository. Build the images using following commands:&lt;/p&gt; &lt;pre&gt;$ docker build -t fedora-minimal:jvm --file DockerfileFedoraMinimalJVM . $ docker build -t fedora-minimal:native --file DockerfileFedoraMinimalNative . $ docker build -t fedora:jvm --file DockerfileFedoraJVM . $ docker images&lt;/pre&gt; &lt;h2&gt;Application response times&lt;/h2&gt; &lt;p&gt;Response times indicate the median response time for each execution. This exercise is not intended to measure the application performance, and the code provided in the repo is not optimized for performance. Instead, the focus is on finding whether native compilation introduces any overhead to the average response times. From the numbers below, it can be seen that the native image is not adding any specific overhead to the overall performance. This test was executed for less than a minute and as Hotspot comes into play, the JDK response times probably would start to more closely match the native response time.&lt;/p&gt; &lt;div id="attachment_510637" style="width: 547px" class="wp-caption aligncenter"&gt;&lt;img class="wp-image-510637" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/Screen-Shot-2018-07-24-at-09.16.01-300x187.png" alt="Response times comparison" width="537" height="335" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/Screen-Shot-2018-07-24-at-09.16.01-300x187.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/Screen-Shot-2018-07-24-at-09.16.01-768x479.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/Screen-Shot-2018-07-24-at-09.16.01-1024x638.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/Screen-Shot-2018-07-24-at-09.16.01.png 1216w" sizes="(max-width: 537px) 100vw, 537px" /&gt;&lt;p class="wp-caption-text"&gt;Response times comparison&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Setup&lt;/h4&gt; &lt;p&gt;&lt;a href="https://github.com/tsenart/vegeta"&gt;Vegeta&lt;/a&gt;, an HTTP load testing tool, is used to put a load on the application for 60 seconds.&lt;/p&gt; &lt;p&gt;The test used &lt;code&gt;vegeta&lt;/code&gt; with the following parameters:&lt;/p&gt; &lt;pre&gt;&lt;em&gt;$ echo &lt;/em&gt;"GET http://localhost:8080/" | \ &lt;em&gt;./vegeta&lt;/em&gt; attack -duration=60s -rate=200 -keepalive=false | \ &lt;em&gt;tee&lt;/em&gt; results.bin | \ &lt;em&gt;./vegeta&lt;/em&gt; report&lt;/pre&gt; &lt;p&gt;Everything is running on a laptop with an Intel Core i7 processor and 16GB of RAM. MongoDB is also running locally and no tuning has been performed on any specific parameter.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Serverless architectures can benefit from faster startup times. The configuration demonstrated in this article shows how GraalVM can reduce startup time and Docker image size for Java-based programs.&lt;/p&gt; &lt;p&gt;For your Java applications that are hosted on container platforms such as &lt;a href="https://developers.redhat.com/products/openshift/overview/"&gt;Red Hat OpenShift&lt;/a&gt;, try natively compiling them using GraalVM and its AOTC capability to see how they can benefit from faster Java startup time and a smaller Docker image size.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F30%2Fnatively-compile-java-code-for-better-startup-time%2F&amp;#38;linkname=Natively%20compile%20Java%20code%20for%20better%20startup%20time" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F30%2Fnatively-compile-java-code-for-better-startup-time%2F&amp;#38;linkname=Natively%20compile%20Java%20code%20for%20better%20startup%20time" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F30%2Fnatively-compile-java-code-for-better-startup-time%2F&amp;#38;linkname=Natively%20compile%20Java%20code%20for%20better%20startup%20time" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F30%2Fnatively-compile-java-code-for-better-startup-time%2F&amp;#38;linkname=Natively%20compile%20Java%20code%20for%20better%20startup%20time" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F30%2Fnatively-compile-java-code-for-better-startup-time%2F&amp;#38;linkname=Natively%20compile%20Java%20code%20for%20better%20startup%20time" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F30%2Fnatively-compile-java-code-for-better-startup-time%2F&amp;#38;linkname=Natively%20compile%20Java%20code%20for%20better%20startup%20time" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F30%2Fnatively-compile-java-code-for-better-startup-time%2F&amp;#38;linkname=Natively%20compile%20Java%20code%20for%20better%20startup%20time" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F30%2Fnatively-compile-java-code-for-better-startup-time%2F&amp;#38;linkname=Natively%20compile%20Java%20code%20for%20better%20startup%20time" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F30%2Fnatively-compile-java-code-for-better-startup-time%2F&amp;#38;title=Natively%20compile%20Java%20code%20for%20better%20startup%20time" data-a2a-url="https://developers.redhat.com/blog/2018/07/30/natively-compile-java-code-for-better-startup-time/" data-a2a-title="Natively compile Java code for better startup time"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/30/natively-compile-java-code-for-better-startup-time/"&gt;Natively compile Java code for better startup time&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/DwPuT0Kxk-o" height="1" width="1" alt=""/&gt;</content><summary>Microservices and serverless architectures are being implemented, or are a part of the roadmap, in most modern solution stacks. Given that Java is still the dominant language for business applications, the need for reducing the startup time for Java is becoming more important. Serverless architectures are one such area that needs faster startup times, and applications hosted on container platforms...</summary><dc:creator>Faisal Masood</dc:creator><dc:date>2018-07-30T16:15:02Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/30/natively-compile-java-code-for-better-startup-time/</feedburner:origLink></entry><entry><title>Polyglot Camel Routes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/kFjESevK8gA/Polyglot-Camel-Routes.html" /><category term="Camel" scheme="searchisko:content:tags" /><category term="clustering" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_lburgazzoli" scheme="searchisko:content:tags" /><author><name>Luca Burgazzoli</name></author><id>searchisko:content:id:jbossorg_blog-polyglot_camel_routes</id><updated>2018-07-29T00:00:00Z</updated><published>2018-07-29T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As I do not like XML so much, I spent some time on a very small project to load routes written in JavaScript or Groovy.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_background"&gt;Background&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When camel runs on top of Spring Boot, it automatically loads routes bounded to spring&amp;#8217;s application context as well as xml routes placed in a configurable location so as example, if you add a property like:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight"&gt;&lt;code class="language-properties" data-lang="properties"&gt;camel.springboot.xml-routes = classpath:routes/*.xml&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Camel will scan the classpath for resources matching &lt;em&gt;routes/*.xml&lt;/em&gt; so can we use a similar approach to load routes written in different languages?&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Of course yes.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_javascript"&gt;JavaScript&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Java comes with the ScriptEngine so we can use it to invoke a js script that we can use to set up routes. The first attemp was something like:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;new RouteBuilder() { public void configure() throws Exception { ScriptEngineManager manager = ScriptEngineManager(); ScriptEngine engine = manager.getEngineByName("nashorn"); // bind the builder to the script engine engine.put("builder", this); // evaluate the script engine.eval(...); }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This let us to write a js script such as:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight"&gt;&lt;code class="language-js" data-lang="js"&gt;builder.from('timer:js?period=1s') .to('log:js?showAll=false&amp;#38;multiline=false')&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Yeah it does work but I do not like having to reference a &lt;em&gt;builder&lt;/em&gt; directly so I came across this &lt;a href="https://stackoverflow.com/questions/31236550/defining-a-default-global-java-object-to-nashorn-script-engine"&gt;SO question&lt;/a&gt; and I re-wrote my code as:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;new RouteBuilder() { public void configure() throws Exception { ScriptEngineManager manager = new ScriptEngineManager(); ScriptEngine engine = manager.getEngineByName("nashorn"); // get JavaScript "global" object Object global = engine.eval("this"); // get JS "Object" constructor object Object jsObject = engine.eval("Object"); Invocable invocable = (Invocable) engine; // "bind" properties of this to JS global object invocable.invokeMethod(jsObject, "bindProperties", global, this); // evaluate the script engine.eval(...); } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Which lets to avoid to reference the &lt;em&gt;builder&lt;/em&gt; object so we can write our route as:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight"&gt;&lt;code class="language-js" data-lang="js"&gt;from('timer:js?period=1s') .to('log:js?showAll=false&amp;#38;multiline=false')&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_groovy"&gt;Groovy&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For groovy I decide not to use the ScriptEngine as Groovy as I did not found any easy way to implement a solution similar to the JavaScript one so I decide Groovy&amp;#8217;s native embedding facility:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight"&gt;&lt;code class="language-groovy" data-lang="groovy"&gt;new RouteBuilder() { public void configure() throws Exception { CompilerConfiguration cc = new CompilerConfiguration(); cc.setScriptBaseClass(DelegatingScript.class.getName()); ClassLoader cl = Thread.currentThread().getContextClassLoader(); GroovyShell sh = new GroovyShell(cl, new Binding(), cc); DelegatingScript script = (DelegatingScript) sh.parse(...) script.setDelegate(this); script.run(); } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So we can write routes as:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight"&gt;&lt;code class="language-groovy" data-lang="groovy"&gt;from('timer:groovy?period=1s') .process { it.in.body = UUID.randomUUID().toString() } .to('log:groovy?showAll=false&amp;#38;multiline=false')&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_conclusion"&gt;Conclusion&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is a Sunday project so I&amp;#8217;m sure there are quite a lot of small details that need some more attention but if you want to experiment with scripting languages instead of XML to define your routes, you can find a small spring boot auto configurer &lt;a href="https://github.com/lburgazzoli/camel-routes-loader"&gt;on my GitHub page&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To configure the behavior of the auto configurer you can do something like:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight"&gt;&lt;code class="language-yaml" data-lang="yaml"&gt;camel: springboot: # your camel conf here routes: loader: enabled: true locations: # list of paths and pattern to scan # for routes - classpath:ext/camel/*.js - classpath:ext/camel/*.groovy&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/kFjESevK8gA" height="1" width="1" alt=""/&gt;</content><summary>As I do not like XML so much, I spent some time on a very small project to load routes written in JavaScript or Groovy. Background When camel runs on top of Spring Boot, it automatically loads routes bounded to spring’s application context as well as xml routes placed in a configurable location so as example, if you add a property like: camel.springboot.xml-routes = classpath:routes/*.xml Camel wi...</summary><dc:creator>Luca Burgazzoli</dc:creator><dc:date>2018-07-29T00:00:00Z</dc:date><feedburner:origLink>https://lburgazzoli.github.io/2018/07/29/Polyglot-Camel-Routes.html</feedburner:origLink></entry><entry><title>Collaboration in open source license enforcement — a community movement is happening</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/YYVV4qEtygM/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="gpl" scheme="searchisko:content:tags" /><category term="GPL Cooperation Commitment" scheme="searchisko:content:tags" /><category term="lgpl" scheme="searchisko:content:tags" /><category term="license" scheme="searchisko:content:tags" /><category term="open source" scheme="searchisko:content:tags" /><category term="open source license" scheme="searchisko:content:tags" /><category term="open source software" scheme="searchisko:content:tags" /><author><name>Rob Terzi</name></author><id>searchisko:content:id:jbossorg_blog-collaboration_in_open_source_license_enforcement_a_community_movement_is_happening</id><updated>2018-07-27T21:00:21Z</updated><published>2018-07-27T21:00:21Z</published><content type="html">&lt;p&gt;[We are reposting on the Red Hat Developers blog this article from the &lt;a href="https://www.redhat.com/en/blog/collaboration-open-source-license-enforcement-community-movement-happening?source=bloglisting?sc_cid=701f2000000tucqAAA"&gt;Red Hat blog&lt;/a&gt;, which was written by David Levine, assistant general counsel at Red Hat.]&lt;/p&gt; &lt;p&gt;“Discourage litigation. Persuade your neighbors to compromise whenever you can.”&lt;/p&gt; &lt;p&gt;This was Abraham Lincoln speaking in the mid-1800s but his advice is still relevant today. Litigation is almost always a poor tool for fostering collaboration, whether among neighbors or software developers.&lt;/p&gt; &lt;p&gt;In approaching the topic of open source license enforcement, it is important to consider Lincoln’s advice. Collaboration during open source license enforcement is a key to successful compliance just as it is an important element to success in the software development process. In assessing license enforcement tactics, you need to ask whether they will foster greater collaboration in &lt;a href="https://www.redhat.com/en/open-source"&gt;open source software&lt;/a&gt; development. If the ultimate result of excessive or abusive enforcement is that developers and enterprises are turned off from participating in upstream open source communities, the ecosystems will wither and we all suffer as a result.&lt;/p&gt; &lt;p&gt;&lt;span id="more-511167"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;What good is enforcement if no one is engaging in open source development?&lt;/p&gt; &lt;p&gt;At a minimum, license enforcement should be conducted in a manner that is fair and predictable. This means providing a chance to correct inadvertent errors in license compliance &amp;#8212; a common-sense idea that is now gathering great momentum.&lt;/p&gt; &lt;p&gt;Today, &lt;a href="https://www.redhat.com/en/about/press-releases/movement-builds-diverse-group-14-additional-leaders-seek-greater-predictability-open-source-licensing"&gt;Red Hat announced&lt;/a&gt; that another wave of leading companies &amp;#8212; Amazon, Arm, Canonical, GitLab, Intel, Liferay, Linaro, MariaDB, NEC, Pivotal, Royal Philips, SAS, Toyota, and VMware &amp;#8212; has joined Red Hat and nine other forward-thinking companies in rejecting harsh tactics in the enforcement of open source licenses. Following the lead of the open source development community, the move today reflects the growing strength of the norms in the open source community about the importance of responsible license compliance and supports the long-held belief that individual trolling for personal or corporate gain is not appropriate in the open source ecosystem. Today’s announcement brings the total number of companies who have adopted this approach to 24. The list of companies comes from across industries and geographies, all of whom have agreed to apply the principle of fairness in license enforcement.&lt;/p&gt; &lt;p&gt;For those who review and negotiate commercial contracts on a regular basis, the idea of a reasonable notice and opportunity to fix problems may seem obvious but this wasn’t always the case for the GPL. Version 2 of the GPL and LGPL do not contain express “cure” periods to fix problems before the licenses are terminated. In an earlier era, the &lt;a href="https://www.fsf.org/"&gt;Free Software Foundation&lt;/a&gt; (FSF) owned the copyrights for nearly all GPL-licensed code and was the only copyright holder regularly engaged in license enforcement. At that time, the idea of automatic termination in the hands of a benevolent license steward may have seemed appropriate to encourage and enforce license compliance. But, over time, there was an increasing volume of GPL and LGPL-licensed software that was distributed by a growing body of copyright holders (i.e., many potential license enforcers). A consensus began to form that automatic termination could result in potential unfairness and opportunities for abusive enforcement. When the FSF, with the guidance and assistance of the &lt;a href="https://www.softwarefreedom.org/"&gt;Software Freedom Law Center&lt;/a&gt;, ultimately released GPLv3 in 2007, one of its new features was the introduction of a cure period for license noncompliance and mechanisms for license reinstatement when compliance errors were promptly fixed.&lt;/p&gt; &lt;p&gt;Following the release of GPLv3, the FSF encouraged existing GPLv2 projects to adopt GPLv3. While many projects did move, there is still a large body of code that continues to be licensed under version 2. Some projects have chosen not to move and others were unable to do so due to license selection upstream or other reasons.&lt;/p&gt; &lt;p&gt;At the same time, the use of open source software has become increasingly ubiquitous across a growing number of industries &amp;#8212; it is fast becoming the very foundation of cloud computing. An increasing number of companies in a variety of industries ranging from automobiles to banks to consumer products are now contributing to, distributing, and using open source software within their enterprises and product portfolios. The diversity and volume of open source code used in products today have now become so large that it is no longer reasonable to expect that there will be 100 percent compliance all of the time. The potential for abusive enforcement of the automatic termination provisions of the GPLv2 became concerning to developers and community enforcement organizations who have been coalescing behind the position that heavy-handed approaches to license enforcement are out of place in the community.&lt;/p&gt; &lt;p&gt;This movement to adopt the GPLv3 cure approach for GPLv2 licensed–code originated with community-focused organizations and developers and, as today’s announcement demonstrates, is now being adopted by leading companies across industries and geographies. The approach has been adopted by more than 100 &lt;a href="https://www.kernel.org/doc/html/latest/process/kernel-enforcement-statement.html"&gt;Linux kernel developers&lt;/a&gt; and by &lt;a href="https://www.redhat.com/en/blog/gpl-cooperation-commitment-and-red-hat-projects"&gt;Red Hat-led projects&lt;/a&gt;. In addition, a growing number of individual open source developers are adding their names to the GPL Cooperation Commitment for their own GPLv2 and LGPLv2, and LGPLv2.1 copyrighted code through a &lt;a href="https://gplcc.github.io/gplcc/"&gt;repository hosted on GitHub&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Starting from a concept first embodied in GPLv3, the idea of affording GPLv2 and LGPLv2.x licensees the same opportunity to correct errors in compliance is now catching hold: the &lt;a href="https://www.linuxfoundation.org/"&gt;Linux Foundation&lt;/a&gt; and its work with the &lt;a href="https://www.kernel.org/doc/html/v4.16/process/kernel-enforcement-statement.html"&gt;Linux kernel developers&lt;/a&gt;, &lt;a href="https://www.redhat.com/en/blog/gpl-cooperation-commitment-and-red-hat-projects"&gt;Red Hat projects&lt;/a&gt;, &lt;a href="https://www.redhat.com/en/about/press-releases/movement-builds-diverse-group-14-additional-leaders-seek-greater-predictability-open-source-licensing"&gt;24 companies&lt;/a&gt;, and more than &lt;a href="https://github.com/gplcc/gplcc/blob/master/Individual/README-INDIVIDUAL.md"&gt;100 developers&lt;/a&gt; &amp;#8212; all adopting the GPLv3 cure approach for GPLv2 and LGPLv2.x licensed–code.&lt;/p&gt; &lt;p&gt;Red Hat intends to continue its effort to encourage other companies, projects, and developers to adopt the GPL Cooperation Commitment and to support approaches to license enforcement that foster greater collaboration in open source software development.&lt;/p&gt; &lt;p&gt;Innovation takes a village, and fairness and predictability are keys to growing that village.&lt;/p&gt; &lt;p&gt;Visit the &lt;a href="https://gplcc.github.io/gplcc/"&gt;GPL Cooperation Commitment&lt;/a&gt; GitHub page if you or your company are interested in joining.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;title=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" data-a2a-url="https://developers.redhat.com/blog/2018/07/27/collaboration-in-open-source-license-enforcement-a-community-movement-is-happening/" data-a2a-title="Collaboration in open source license enforcement — a community movement is happening"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/27/collaboration-in-open-source-license-enforcement-a-community-movement-is-happening/"&gt;Collaboration in open source license enforcement &amp;#8212; a community movement is happening&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/YYVV4qEtygM" height="1" width="1" alt=""/&gt;</content><summary>[We are reposting on the Red Hat Developers blog this article from the Red Hat blog, which was written by David Levine, assistant general counsel at Red Hat.] “Discourage litigation. Persuade your neighbors to compromise whenever you can.” This was Abraham Lincoln speaking in the mid-1800s but his advice is still relevant today. Litigation is almost always a poor tool for fostering collaboration, ...</summary><dc:creator>Rob Terzi</dc:creator><dc:date>2018-07-27T21:00:21Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/27/collaboration-in-open-source-license-enforcement-a-community-movement-is-happening/</feedburner:origLink></entry><entry><title>jBPM Workitems Spotlight - GitHub and Slack</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/lgx6AZNA6V0/jbpm-workitems-spotlight-github-and.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Tihomir Surdilovic</name></author><id>searchisko:content:id:jbossorg_blog-jbpm_workitems_spotlight_github_and_slack</id><updated>2018-07-26T19:10:14Z</updated><published>2018-07-26T19:05:00Z</published><content type="html">&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;So far we have posted a number of articles describing the &lt;a href="https://github.com/kiegroup/jbpm-work-items"&gt;jBPM Workitem Repository&lt;/a&gt; and its features but there was little mention about its actual content and the powerful integration capabilities it brings to your business processes.&lt;br /&gt;&lt;br /&gt;Currently the workitem repository includes 25 different workitem groups and a total of 57 individual workitem handlers. These include various integration services with Google,&amp;nbsp; Dropbox, IBM, Twitter and many more. New workitems can easily be added as was described in &lt;a href="http://mswiderski.blogspot.com/2018/04/jbpm-work-items-are-really-simple.html"&gt;this previous article&lt;/a&gt;.&amp;nbsp; Given that the number of workitems in growing at a steady pace we thought to start showcasing them with simple working examples that you can take and use to start implementing your custom integration solutions.&lt;br /&gt;&lt;br /&gt;In this article we will focus on two workitem groups, namely GitHub and Slack:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-MHgfbiGhVfQ/W1oN32ix-jI/AAAAAAAAhHk/9zvIgQ76gGI5I4s58KwnGEqfLY2CbG05wCLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B2.17.45%2BPM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="466" data-original-width="1600" height="116" src="https://1.bp.blogspot.com/-MHgfbiGhVfQ/W1oN32ix-jI/AAAAAAAAhHk/9zvIgQ76gGI5I4s58KwnGEqfLY2CbG05wCLcBGAs/s400/Screen%2BShot%2B2018-07-26%2Bat%2B2.17.45%2BPM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-qQxDMJTM0CM/W1oN354vDZI/AAAAAAAAhHg/nuDT3UYI7_kZd1nmIKzB3IyBkm23D0kMACLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B2.17.54%2BPM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="316" data-original-width="1600" height="78" src="https://4.bp.blogspot.com/-qQxDMJTM0CM/W1oN354vDZI/AAAAAAAAhHg/nuDT3UYI7_kZd1nmIKzB3IyBkm23D0kMACLcBGAs/s400/Screen%2BShot%2B2018-07-26%2Bat%2B2.17.54%2BPM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;For our simple example to showcase these workitems we will create a business process which fetches all open issues from one of your GitHub repositories, accumulate them into a message and then send this message to a specified channel on Slack notifying you of these open issues and give you simple links to each so you can start addressing them.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;First let's look at the pre-requisites for each of the workitems. To start using GitHub workitems the required information is your login data, namely your username and password. For this example we will use the &lt;a href="https://github.com/kiegroup/jbpm-work-items/blob/master/github-workitem/src/main/java/org/jbpm/process/workitem/github/FetchIssuesWorkitemHandler.java"&gt;FetchIssuesWorkitemHandler&lt;/a&gt;&amp;nbsp;where you will also need to know the name of the repository where you want to fetch the issues from.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;To start using the Slack workitem handlers you need to first create a Slack App. Follow &lt;a href="https://api.slack.com/"&gt;this link&lt;/a&gt; to get started with that. Once you create your app make sure to enable OAuth so Slack will create an access token for it. This access token is then passed to the workitem handler as it needs it for authentication with the Slack service. The workitem handler we will use here is &lt;a href="https://github.com/kiegroup/jbpm-work-items/blob/master/slack-workitem/src/main/java/org/jbpm/process/workitem/slack/PostMessageToChannelWorkitemHandler.java"&gt;PostMessageToChannelWorkitemHandler&lt;/a&gt;&amp;nbsp;which also needs the name of one of the channels your slack app has access posting messages to.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;To follow this example we also assume that you have the KIE workbench+server set up and ready but if you don't you can follow &lt;a href="http://mswiderski.blogspot.com/2018/06/single-zip-distribution-for-jbpm.html"&gt;this article&lt;/a&gt; to do that literally in minutes. We also assume that you have an existing GitHub repository set up with some real or test issues defined. If you don't you could use &lt;a href="https://github.com/tsurdilo/testrepo"&gt;this test one&lt;/a&gt;.&amp;nbsp;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-wNrnf1iUP5s/W1oSzkTH3mI/AAAAAAAAhH0/i_Bjw6cSr5IJbK5ft7il6MpJtZn9cbcRwCLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B2.39.09%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="779" data-original-width="1600" height="155" src="https://4.bp.blogspot.com/-wNrnf1iUP5s/W1oSzkTH3mI/AAAAAAAAhH0/i_Bjw6cSr5IJbK5ft7il6MpJtZn9cbcRwCLcBGAs/s320/Screen%2BShot%2B2018-07-26%2Bat%2B2.39.09%2BPM.png" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Test GitHub repo with some test issues&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;With our KIE worbench running log in and create a new project. Within this project create a new business process (with legacy editor as it's currently only one capable of installing workitems from a repository).&amp;nbsp; Click on the repository icon in the process editor menu bar and connect to your running service repository&lt;br /&gt;&lt;div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-AVtBmpvye24/W1oUBwqJwJI/AAAAAAAAhIA/1amJ_FVZB6c8N2_ySD_77GyivyqFdkTKwCLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B12.12.24%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="744" data-original-width="1600" height="148" src="https://4.bp.blogspot.com/-AVtBmpvye24/W1oUBwqJwJI/AAAAAAAAhIA/1amJ_FVZB6c8N2_ySD_77GyivyqFdkTKwCLcBGAs/s320/Screen%2BShot%2B2018-07-26%2Bat%2B12.12.24%2BPM.png" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Installing workitems from workbench legacy bpmn2 editor&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Find the two workitem handlers we mentioned earlier, namely FetchIssuesWorkitemHandler and PostMessageToChannelWorkitemHandler and click on the little wrench icon next to each to install them into your workbench. Note that the install also updates your project pom with all necessary maven dependencies to execute these workitems as well as your projects deployment descriptor xml.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;To finish the setup we do need to edit the projects deployment descriptor slightly, passing in our login information to the github workitem as well as the Slack access token created to the slack workitem so they can authenticate with their respective services correctly:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For this in the project explorer navigate to your projects /src/main/resources/META-INF directory and edit the kie-deployment-descriptor.xml file. Note that under the work-item-handlers element in this xml file the workitem installer has already added the definitions of two workitem handlers we want to use, however it needs to be slightly changed to add the sensitive info we talked about:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So for the GitHub handler we need to add:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;lt;identifier&amp;gt;new org.jbpm.process.workitem.github.FetchIssuesWorkitemHandler("&lt;b&gt;YOUR_GITHUB_LOGIN_NAME&lt;/b&gt;", "&lt;b&gt;YOUR_GITHUB_LOGIN_PASSWORD&lt;/b&gt;")&amp;lt;/identifier&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;and for the Slack handler:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;lt;identifier&amp;gt;new org.jbpm.process.workitem.slack.PostMessageToChannelWorkitemHandler("&lt;b&gt;YOUR_SLACK_APP_ACCESS_TOKEN&lt;/b&gt;")&amp;lt;/identifier&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Note that in the image below I have cut off the sensitive info as I used my personal login information when making the demo&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-WpydQi0y7dA/W1oWmnZ6BbI/AAAAAAAAhIM/SqhnXmhxHRgv-3iYT2ktOXZ7TPde_k2kACLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B2.50.40%2BPM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="779" data-original-width="1600" height="193" src="https://3.bp.blogspot.com/-WpydQi0y7dA/W1oWmnZ6BbI/AAAAAAAAhIM/SqhnXmhxHRgv-3iYT2ktOXZ7TPde_k2kACLcBGAs/s400/Screen%2BShot%2B2018-07-26%2Bat%2B2.50.40%2BPM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;Modifying the kie deployment descriptor&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Now we should be all set up to create our business process. You can download or import the one used in this example from &lt;a href="https://gist.github.com/tsurdilo/98d5fffc0489b5c9ce0b234eb9d2f1fa"&gt;this Gist&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-KpL6-_xngKk/W1oX2KzB3II/AAAAAAAAhIc/8YBwAWm2p5YJ1XQ4tmQOrAPnuKuHoEFNACLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B1.55.42%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="789" data-original-width="1600" height="196" src="https://2.bp.blogspot.com/-KpL6-_xngKk/W1oX2KzB3II/AAAAAAAAhIc/8YBwAWm2p5YJ1XQ4tmQOrAPnuKuHoEFNACLcBGAs/s400/Screen%2BShot%2B2018-07-26%2Bat%2B1.55.42%2BPM.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Our test business process&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;The example process first fetches all open issues from our testrepo GitHub repository. This list is then saved in a process variable which the script task iterates to create a message. The created message is then used by the Slack workitem to connect to your defined channel and create a new post to it.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;You can now build and deploy your worbench process and start and instance of our example process&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-_UAw-sZjs5U/W1oZJpFPqUI/AAAAAAAAhIw/r8UQ2BCkt54nVbToTx1QhqgLC8raK8h8ACEwYBhgL/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B3.06.02%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="749" data-original-width="1600" height="149" src="https://3.bp.blogspot.com/-_UAw-sZjs5U/W1oZJpFPqUI/AAAAAAAAhIw/r8UQ2BCkt54nVbToTx1QhqgLC8raK8h8ACEwYBhgL/s320/Screen%2BShot%2B2018-07-26%2Bat%2B3.06.02%2BPM.png" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Starting new instance of the example process&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-L_GaftGhuKc/W1oZ5JpvECI/AAAAAAAAhI4/aieCIimUVnkty0tHCasQlT5rx7_Cy8HfgCEwYBhgL/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B3.08.39%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="800" data-original-width="1600" height="160" src="https://3.bp.blogspot.com/-L_GaftGhuKc/W1oZ5JpvECI/AAAAAAAAhI4/aieCIimUVnkty0tHCasQlT5rx7_Cy8HfgCEwYBhgL/s320/Screen%2BShot%2B2018-07-26%2Bat%2B3.08.39%2BPM.png" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Process instance completed info panel&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;Once the process has completed execution you should see in your Slack channel the result message:&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-do6Soo03-8s/W1oajn5oYuI/AAAAAAAAhI8/pT4Cyo5qvdMt9whs3u6AxRG_7gGCn20IgCLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B1.52.45%2BPM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="211" data-original-width="1600" height="84" src="https://1.bp.blogspot.com/-do6Soo03-8s/W1oajn5oYuI/AAAAAAAAhI8/pT4Cyo5qvdMt9whs3u6AxRG_7gGCn20IgCLcBGAs/s640/Screen%2BShot%2B2018-07-26%2Bat%2B1.52.45%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;And that's it :) Let us know what other workitems you would like to see featured next.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/lgx6AZNA6V0" height="1" width="1" alt=""/&gt;</content><summary>So far we have posted a number of articles describing the jBPM Workitem Repository and its features but there was little mention about its actual content and the powerful integration capabilities it brings to your business processes. Currently the workitem repository includes 25 different workitem groups and a total of 57 individual workitem handlers. These include various integration services wit...</summary><dc:creator>Tihomir Surdilovic</dc:creator><dc:date>2018-07-26T19:05:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/07/jbpm-workitems-spotlight-github-and.html</feedburner:origLink></entry><entry><title>Announcing the DevConf.US 2018 developer conference</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/X3N4PQm5Gz4/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="artificial intelligence" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="devconf" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="FOSS" scheme="searchisko:content:tags" /><category term="machine learning" scheme="searchisko:content:tags" /><category term="middleware" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><author><name>Langdon White</name></author><id>searchisko:content:id:jbossorg_blog-announcing_the_devconf_us_2018_developer_conference</id><updated>2018-07-26T16:10:43Z</updated><published>2018-07-26T16:10:43Z</published><content type="html">&lt;p&gt;I am happy to announce that DevConf.US &lt;a href="https://www.eventbrite.com/e/devconfus-2018-tickets-43966825960"&gt;registration is now open&lt;/a&gt; and the &lt;a href="https://devconfus2018.sched.com/"&gt;schedule&lt;/a&gt; is live. DevConf events are free, but online registration is required. If you are available August 17–19, 2018, we would love for you to come and participate.&lt;/p&gt; &lt;p&gt;Similar to DevConf.CZ, &lt;a href="https://devconf.info/us/"&gt;DevConf.us 2018&lt;/a&gt; is the 1st annual, free, &lt;a href="https://redhat.com"&gt;Red Hat&lt;/a&gt; sponsored technology conference for community project and professional contributors to Free and Open Source technologies (FOSS) at the Boston University in the historic city of Boston, USA.&lt;/p&gt; &lt;p&gt;You should consider attending this DevConf event if you are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A developer&lt;/li&gt; &lt;li&gt;A technology architect&lt;/li&gt; &lt;li&gt;An IT consultant&lt;/li&gt; &lt;li&gt;An IT student or a teacher from an IT university/faculty&lt;/li&gt; &lt;li&gt;Or simply an IT enthusiast interested in the latest trends in open source and emerging digital technologies&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span id="more-510537"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The primary event themes this year are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Containers and orchestration&lt;/li&gt; &lt;li&gt;Machine Learning and Artificial Intelligence&lt;/li&gt; &lt;li&gt;Serverless computing&lt;/li&gt; &lt;li&gt;Middleware technologies&lt;/li&gt; &lt;li&gt;Operating Systems&lt;/li&gt; &lt;li&gt;Testing, Debugging, Tracing and Software Quality&lt;/li&gt; &lt;li&gt;User Experience&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Check &lt;a href="https://devconfus2018.sched.com/"&gt;the schedule&lt;/a&gt; for more details.&lt;/p&gt; &lt;p&gt;The event will be held at the &lt;a href="https://goo.gl/maps/Lh4eo94Adpj"&gt;George Sherman Union&lt;/a&gt; building on the Boston University campus.  DevConf events are free, without admission or ticket charge. On-line registration is required though. Talks, presentations, and workshops will all be in English. For more information, please visit &lt;a href="https://devconf.info/us/"&gt;devconf.us&lt;/a&gt; or contact us at &lt;a href="mailto:info@devconf.us"&gt;info@devconf.us&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;On Thursday, August 16th, the day before the main event, there will be a day of &lt;a href="https://wiki.centos.org/Events/Dojo/DevConfUS2018" target="_blank" rel="noopener"&gt;CentOS talks and community gatherings&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://devconf.info/us/"&gt;Register now&lt;/a&gt; and join us in Boston!&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;title=Announcing%20the%20DevConf.US%202018%20developer%20conference" data-a2a-url="https://developers.redhat.com/blog/2018/07/26/announcing-the-devconf-us-2018-developer-conference/" data-a2a-title="Announcing the DevConf.US 2018 developer conference"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/26/announcing-the-devconf-us-2018-developer-conference/"&gt;Announcing the DevConf.US 2018 developer conference&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/X3N4PQm5Gz4" height="1" width="1" alt=""/&gt;</content><summary>I am happy to announce that DevConf.US registration is now open and the schedule is live. DevConf events are free, but online registration is required. If you are available August 17–19, 2018, we would love for you to come and participate. Similar to DevConf.CZ, DevConf.us 2018 is the 1st annual, free, Red Hat sponsored technology conference for community project and professional contributors to F...</summary><dc:creator>Langdon White</dc:creator><dc:date>2018-07-26T16:10:43Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/26/announcing-the-devconf-us-2018-developer-conference/</feedburner:origLink></entry><entry><title>This week in JBoss, 26th of July 2018</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/4_tZJkIvOrE/this-week-in-jboss-26th-of-july-2018" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><author><name>Paul Robinson</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_26th_of_july_2018</id><updated>2018-07-26T16:07:02Z</updated><published>2018-07-26T16:07:02Z</published><content type="html">&lt;!-- [DocumentBodyStart:02adbd1f-7866-47b4-9842-2b7a29d2af7c] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;Welcome to the weekly roundup from the JBoss Community. Read on for an overview of the week's news and releases.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="https://www.optaplanner.org/blog/2018/07/25/HowToDefeatGerrymanderingAndCreateFairElections.html" rel="nofollow"&gt;How to defeat gerrymandering and create fair elections&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Over the years, politicians have redrawn electoral voting lines to gain an unfair advantage. This has led to district boundaries with shapes that have no obvious pattern or reason other than political gain. When districts are redrawn you can sway an elections results without changing a single voter&amp;#8217;s mind. Can OptaPlanner draw fair electoral boundaries and save democracy?&lt;/p&gt;&lt;h2&gt;&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/easy_workitem_installation_jbpm_workitem_repository" rel="nofollow"&gt;Easy Workitem installation (jBPM WorkItem Repository)&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The jBPM team has added the ability to install workitems hosted by the&amp;#160; jBPM Workitem Repository on any running KIE Worbench instance directly from the repository. itself This lifts some limitations of installing workitems which was so far only possible from within process editors inside each running workbench. It also allows for future integrations with other runtime systems that can take advantage of the hosted workitems.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/3_pitfalls_everyone_should_avoid_with_hybrid_multicloud_part_4" rel="nofollow"&gt;3 Pitfalls Everyone Should Avoid with Hybrid Multicloud (Part 4)&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;span style="color: #424242; font-family: Cabin, sans-serif; font-size: 16px;"&gt;This article series highlights three pitfalls you should be aware of when transitioning into hybrid multicloud environments.&lt;/span&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/enterprise_integration_for_ethereum" rel="nofollow"&gt;Enterprise Integration for Ethereum&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Ethereum is distributed and decentralized, but it is mostly a closed system with the embedded ledger, the currency, and the executing nodes. In order to be useful for the enterprise, Ethereum has to be well integrated with existing legacy and new systems. In this post Bilgin Ibryam presents the Apache Camel Connector for Ethereum.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="https://hal.github.io/blog/inspect-http-sessions/" rel="nofollow"&gt;Inspect HTTP Sessions in Undertow&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The Undertow WildFly subsystem has been enhanced and provides new operations to inspect HTTP sessions.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="https://hal.github.io/blog/configuration-changes/" rel="nofollow"&gt;Log all configuration changes to WildFly&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;There is a feature to record all configuration changes to an in-memory log per host or server, it records any change performed on Wildfly, for example: deploy an application, add a datasource, change any configuration, add any resource. This blog post will show how it works.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/five_advantages_of_log_based_change_data_capture" rel="nofollow"&gt;Five Advantages of Log-Based Change Data Capture&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;In this post Gunnar Morling answers the question of "why use a log-based change data capturing tool such as Debezium over simply polling for updated records?"&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/performance_baseline_for_jbpm_7_7_8_0" rel="nofollow"&gt;Performance baseline for jBPM 7 (7.8.0)&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The aim of this article is to measure the base performance of jBPM so as to set a baseline and to answer the basic question of how good jBPM performs when it comes to execution. This is not to be seen as competitive information or show that jBPM is faster or slower than other engines, but more for setting a stage and open the door for more performance tests that can be performed in different types of environments.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/red_hat_process_automation_manager_v7_0" rel="nofollow"&gt;Red Hat Process Automation Manager v7.0&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;In this post Kris Verlaenen introduces &lt;em&gt;Red Hat Process Automation Manager v7.0&lt;/em&gt;. This is the latest major release of &lt;em&gt;Red Hat JBoss BPM Suite&lt;/em&gt; product, which brings with it a product rename that reflects the broadened scope of the software.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/maciej_swiderski_is_the_new_jbpm_community_lead" rel="nofollow"&gt;Maciej Swiderski is the new jBPM community lead&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;In this post Kris Verlaenen announces that Maciej (aka "Magic") Swiderski will officially become the new jBPM community lead.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Releases&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/hibernate_orm_5_3_3_final_released" rel="nofollow"&gt;Hibernate ORM 5.3.3.Final&lt;/a&gt;. Includes support for JDK 11.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/third_maintenance_release_for_hibernate_search_5_10" rel="nofollow"&gt;Hibernate Search 5.10.3&lt;/a&gt;. Third maintenance release of Hibernate Search 5.10.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/hibernate_validator_6_0_11_final_released" rel="nofollow"&gt;Hibernate Validator 6.0.11.Final&lt;/a&gt;. Includes support for JDK 11 and other bug fixes.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/byteman_4_0_4_has_been_released" rel="nofollow"&gt;Byteman 4.0.4&lt;/a&gt;. Brings JDK 11 compatibility to Byteman.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/infinispan_9_3_1_final_and_9_4_0_alpha1" rel="nofollow"&gt;Infinispan 9.3.1.Final&lt;/a&gt;.&amp;#160; Includes some important bug fixes, and we recommend all users of 9.3.0.Final to upgrade.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/infinispan_9_3_1_final_and_9_4_0_alpha1" rel="nofollow"&gt;Infinispan 9.4.0.Alpha1&lt;/a&gt;. The first iteration towards Infinispan's next big release.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/infinispan_spark_connector_0_8_released" rel="nofollow"&gt;Infinispan Spark connector 0.8&lt;/a&gt;. Provides compatibility with Spark 2.3 and Infinispan 9.3&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:02adbd1f-7866-47b4-9842-2b7a29d2af7c] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/4_tZJkIvOrE" height="1" width="1" alt=""/&gt;</content><summary>Welcome to the weekly roundup from the JBoss Community. Read on for an overview of the week's news and releases.   How to defeat gerrymandering and create fair elections Over the years, politicians have redrawn electoral voting lines to gain an unfair advantage. This has led to district boundaries with shapes that have no obvious pattern or reason other than political gain. When districts are redr...</summary><dc:creator>Paul Robinson</dc:creator><dc:date>2018-07-26T16:07:02Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2018/07/26/this-week-in-jboss-26th-of-july-2018</feedburner:origLink></entry><entry><title>Detecting credit card fraud with Red Hat Decision Manager 7</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/HdMXRDAKOI4/" /><category term="Business Rules" scheme="searchisko:content:tags" /><category term="event processing" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="jboss bpm suite" scheme="searchisko:content:tags" /><category term="JBoss BRMS" scheme="searchisko:content:tags" /><category term="Red Hat JBoss Decision Manager" scheme="searchisko:content:tags" /><category term="rules" scheme="searchisko:content:tags" /><author><name>Duncan Doyle</name></author><id>searchisko:content:id:jbossorg_blog-detecting_credit_card_fraud_with_red_hat_decision_manager_7</id><updated>2018-07-26T11:00:20Z</updated><published>2018-07-26T11:00:20Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/products/red-hat-decision-manager/overview/"&gt;Red Hat Decision Manager&lt;/a&gt; provides a vast array of decision management functionality. From the Decision Tables feature in the new Decision Model and Notation (DMN) v1.1, which implements the full FEEL Compliance Level 3 of the DMN specification, to Predictive Model Markup Language (PMML).&lt;/p&gt; &lt;p&gt;Another powerful feature is the Complex Event Processing (CEP) engine. This engine provides the ability to detect, correlate, abstract, aggregate or compose and react to events. In other words, the technology provides techniques to infer complex events from simple events, react to the events of interest, and take actions. The main difference between CEP and &lt;i&gt;normal&lt;/i&gt; rules execution is the notion of time. Where standard rules execution in Decision Manager deals with facts and reasoning over these facts, the CEP engine focusses on events. An event represents a significant change of state at a particular point in time or interval.&lt;/p&gt; &lt;p&gt;Recently, I was asked to demonstrate how Decision Manager CEP can be used in a real-time credit card fraud detection system. One of the requirements I was presented with ended up in an interesting rule implementation that forms the basis of this article. The requirement was defined as follows:&lt;/p&gt; &lt;p&gt;&lt;span id="more-509847"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;&amp;#8220;When a credit-card transaction enters the system, fetch the context of that transaction from a datastore, where the context is defined as an {x} number of previous transactions of the same credit card. When, within the last 15 minutes of the current transaction, there were three or more additional transactions with the same card, and of those transactions, at least two were within 10 seconds of each other, raise a ‘potential fraud’ alert.”&lt;/em&gt;&lt;/p&gt; &lt;p&gt;When we look at the requirement in more detail, we can identify some interesting time-based constraints. Let’s analyze them one by one and gradually build our CEP rule. Let’s assume that the logic to fetch the context of the current transaction (the {x} number of previous transactions) from the datastore is given and the transactions have been inserted into the CEP engine.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Constraints&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;1) Were there four or more transactions in the last 15 minutes?&lt;/p&gt; &lt;p&gt;1-a) This requirement has the notion of a window: a time-based window of 15 minutes, to be more precise, that will capture all the credit-card transactions that happened within that timespan. In Decision Manager, this can be implemented using the &lt;code&gt;accumulate&lt;/code&gt; construct with a &lt;i&gt;time-window&lt;/i&gt; construct. The &lt;code&gt;accumulate&lt;/code&gt; construct is defined as follows:&lt;/p&gt; &lt;pre&gt;accumulate( &amp;#60;source pattern&amp;#62;; &amp;#60;functions&amp;#62; [;&amp;#60;constraints&amp;#62;] )&lt;/pre&gt; &lt;p&gt;Let&amp;#8217;s start with the source pattern in which we accumulate all credit-card transactions in our time window:&lt;/p&gt; &lt;pre&gt;accumulate ($cct:CreditCardTransaction() over window:time(15m) from entry-point Transactions&lt;/pre&gt; &lt;p&gt;This states that we want to accumulate all &lt;code&gt;CreditCardTransaction&lt;/code&gt; events from the entry point &lt;code&gt;Transactions&lt;/code&gt; that have occurred in the last 15 minutes.&lt;/p&gt; &lt;p&gt;1-b) Now that we have defined the logic to accumulate all transactions that occurred in the last 15 minutes, we need to define the so-called &lt;em&gt;accumulate functions&lt;/em&gt; to do something with this data. If we look at the requirement, we can see that we need to implement a constraint that determines whether there were 4 or more transactions in the last 15 minutes. We can, therefore, use the &lt;code&gt;count&lt;/code&gt; accumulate function to count the number of transactions in our time window:&lt;/p&gt; &lt;pre&gt;accumulate ($cct:CreditCardTransaction() over window:time(15m) from entry-point Transactions;               $nrOfTransactions: count($cct)&lt;/pre&gt; &lt;p&gt;1-c) Now that we’ve counted the number of transactions, we can implement the constraint that checks whether we have four or more transactions in this window:&lt;/p&gt; &lt;pre&gt;accumulate ($cct:CreditCardTransaction() over window:time(15m) from entry-point Transactions; $nrOfTransactions: count($cct);               $nrOfTransactions &amp;#62;= 4)&lt;/pre&gt; &lt;p&gt;2) The second requirement of this rule is that in the set of four or more transactions, there are at least two transactions that occurred within 10 seconds of each other.&lt;/p&gt; &lt;p&gt;2-a) To fulfill this requirement, we need to have access to the &lt;code&gt;CreditCardTransaction&lt;/code&gt; events within our window. We do this by using a second accumulate function called &lt;code&gt;collectList&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;accumulate ($cct: CreditCardTransaction() over window:time (15m) from entry-point Transactions; $nrOfTransactions : count($cct), $list: collectList($cct); $nrOfTransactions &amp;#62;= 4)&lt;/pre&gt; &lt;p&gt;2-b) Now that we have access to the collection (list) of events, we can start comparing them. We need to check whether two &lt;code&gt;CreditCardTransaction&lt;/code&gt; events occurred within 10 seconds of each other. To do this, we use the temporal operator &lt;code&gt;after&lt;/code&gt; to analyze the temporal distance between two events. The two constraints look like this:&lt;/p&gt; &lt;pre&gt;$c1: CreditCardTransaction() from $list $c2: CreditCardTransaction(this != $c1, this after[0s, 10s] $c1) from $list&lt;/pre&gt; &lt;p&gt;Note that the second constraint defines that the &lt;code&gt;CreditCardTransaction&lt;/code&gt; is not the same as the &lt;code&gt;CreditCardTransaction&lt;/code&gt; selected in the first constraint and that this event occurred within 10 seconds &lt;code&gt;after&lt;/code&gt; the other event.&lt;/p&gt; &lt;p&gt;We can now combine our constraints into the complete left-hand-side (LHS) of our rule:&lt;/p&gt; &lt;pre&gt;accumulate ($cct: CreditCardTransaction() over window:time (15m) from entry-point Transactions; $nrOfTransactions : count($cct), $list: collectList($cct); $nrOfTransactions &amp;#62;= 4) $c1: CreditCardTransaction() from $list $c2: CreditCardTransaction(this != $c1, this after[0s, 10s] $c1) from $list&lt;/pre&gt; &lt;h2&gt;&lt;b&gt;Actions&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;With the constraints implemented, we can now define the right-hand-side (RHS), or action, of our rule. In this example, we will introduce a new fact into the rules engine. This is a concept we call &lt;i&gt;inference&lt;/i&gt;. This enables us to define additional rules that define constraints and actions on the newly inferred information/facts/events, thus creating a more complex rule base. Our final rule looks like this:&lt;/p&gt; &lt;pre&gt;rule "CC-Transactions last 15 minutes" when accumulate ($cct: CreditCardTransaction() over window:time (15m) from entry-point Transactions; $nrOfTransactions : count($cct), $list: collectList($cct); $nrOfTransactions &amp;#62;= 4) $c1: CreditCardTransaction() from $list $c2: CreditCardTransaction(this != $c1, this after[0s, 10s] $c1) from $list then System.out.println("\nFound 4 or more cc transactions in last 15 minutes of current transaction"); System.out.println("And within that collection, there are 2 transactions within 10 seconds of each other.\n"); PotentialFraudFact potentialFraud = new PotentialFraudFact(); potentialFraud.setTransactions(new java.util.ArrayList()); potentialFraud.setCreditCardNumber($c1.getCreditCardNumber()); potentialFraud.getTransactions().add($c1); potentialFraud.getTransactions().add($c2); insert(potentialFraud); end&lt;/pre&gt; &lt;p&gt;Note that the &lt;code&gt;System.out.println&lt;/code&gt; statements are used for demonstration purposes only; it’s not recommended to use this kind of statements in production rules. Also note that at the end of our RHS, we &lt;code&gt;insert&lt;/code&gt; the new &lt;code&gt;PotentialFraudFact&lt;/code&gt; into the rules engine.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Inference&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;Having the inferred &lt;code&gt;PotentialFraudFact&lt;/code&gt; inserted into the CEP session enables us to write the following rule that reacts to this fact:&lt;/p&gt; &lt;pre&gt;rule "Found potential fraud" when exists PotentialFraudFact() then System.out.println("\n!!!! Found a potential fraud!!!!\n"); end&lt;/pre&gt; &lt;p&gt;This rule defines that an alarm is raised whenever one or multiple rules detect a potential fraud. Again, the &lt;code&gt;System.out.println&lt;/code&gt; statement is used only for demonstration purposes. In a real rule base, the action of such a rule could be to start a fraud investigation case in the Red Hat Process Automation Manager Case Management engine that:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;blocks the credit card&lt;/li&gt; &lt;li&gt;notifies the user&lt;/li&gt; &lt;li&gt;and notifies an agent of the bank of the potential fraud&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;b&gt;Demo Project&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;A demo project that showcases the rules in this article can be found here: &lt;a href="https://github.com/DuncanDoyle/drools-credit-card-fraud-detection-demo"&gt;https://github.com/DuncanDoyle/drools-credit-card-fraud-detection-demo&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;It’s a simple project in which credit-card transactions are defined in, and loaded from, a &lt;a href="https://github.com/DuncanDoyle/drools-credit-card-fraud-detection-demo/blob/master/src/main/resources/ccTransactions.csv"&gt;CSV file&lt;/a&gt;. To run the project, simply run the &lt;code&gt;Main&lt;/code&gt; class from an IDE (Eclipse, IntelliJ, etc.) or use the following Maven command:&lt;/p&gt; &lt;p&gt;&lt;code&gt;mvn clean compile exec:java&lt;/code&gt;&lt;/p&gt; &lt;p&gt;The detection of a potential fraud will be shown in the logs.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Conclusion&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;The Complex Event Processing engine of &lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/decision-manager"&gt;Red Hat Decision Manager 7&lt;/a&gt; allows users to implement complex, time-based requirements on streams of data in concise and focused rules that use advanced constructs such as the  &lt;code&gt;accumulate&lt;/code&gt; construct, time-window contructs, and temporal operators. We saw that by using techniques such as &lt;i&gt;inference&lt;/i&gt;, we can infer new, complex information from simple events, allowing us to write more-advanced and larger rule bases that are still easy to understand by both software engineers and domain experts.&lt;/p&gt; &lt;p&gt;Decision Manager 7 CEP provides an excellent base for a more-advanced real-time credit card fraud detection system when combined with other platforms and techniques such as:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Red Hat Data Grid/Infinispan for caching of the context of credit cards, providing fast in-memory access to data&lt;/li&gt; &lt;li&gt;Vert.x to implement asynchronous reactive execution of credit card events coming from a large set of clients from various sources&lt;/li&gt; &lt;li&gt;Red Hat AMQ/Kafka for ingestion and stream processing of transaction events&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We will explore these architectures in future articles.&lt;/p&gt; &lt;div&gt; &lt;p&gt;&lt;img class="alignleft" title="Duncan Doyle" src="https://i0.wp.com/en.gravatar.com/userimage/106146330/2f0c06257ede9b94dfb276ccbdb8cab4.jpg" alt="Duncan Doyle" width="119" height="119" /&gt;&lt;/p&gt; &lt;h3&gt;About the author:&lt;/h3&gt; &lt;p&gt;&lt;a href="http://twitter.com/DuncanDoyle" target="_blank" rel="noopener"&gt;Duncan Doyle&lt;/a&gt; is the Technical Marketing Manager for the Decision Manager and Process Automation Manager platforms at Red Hat. With a background in Red Hat Consulting and Services, Duncan has worked extensively with large Red Hat customers to build advanced, open-source, decision management and business process management solutions.&lt;/p&gt; &lt;p&gt;He has a strong background in technologies and concepts like Service Oriented Architecture, Continuous Integration &amp;#38; Delivery, rules engines and BPM platforms and is a subject matter expert (SME) on multiple JBoss Middleware technologies, including, but not limited to, JBoss EAP, HornetQ, Fuse, DataGrid, Decision Manager and Process Automation Manager. When he’s not working on open-source solutions and technology, he is building Lego with his son and daughter or jamming along some 90’s rock-music on his Fender Stratocaster.&lt;/p&gt; &lt;/div&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;title=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" data-a2a-url="https://developers.redhat.com/blog/2018/07/26/detecting-credit-card-fraud-with-red-hat-decision-manager-7/" data-a2a-title="Detecting credit card fraud with Red Hat Decision Manager 7"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/26/detecting-credit-card-fraud-with-red-hat-decision-manager-7/"&gt;Detecting credit card fraud with Red Hat Decision Manager 7&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/HdMXRDAKOI4" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Decision Manager provides a vast array of decision management functionality. From the Decision Tables feature in the new Decision Model and Notation (DMN) v1.1, which implements the full FEEL Compliance Level 3 of the DMN specification, to Predictive Model Markup Language (PMML). Another powerful feature is the Complex Event Processing (CEP) engine. This engine provides the ability to dete...</summary><dc:creator>Duncan Doyle</dc:creator><dc:date>2018-07-26T11:00:20Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/26/detecting-credit-card-fraud-with-red-hat-decision-manager-7/</feedburner:origLink></entry><entry><title>Debezium 0.9 Alpha1 and 0.8.1 Released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Ll7GuIgNSu0/" /><category term="docker" scheme="searchisko:content:tags" /><category term="feed_group_name_debezium" scheme="searchisko:content:tags" /><category term="feed_name_debezium" scheme="searchisko:content:tags" /><category term="oracle" scheme="searchisko:content:tags" /><category term="postgres" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><category term="sqlserver" scheme="searchisko:content:tags" /><author><name>Gunnar Morling</name></author><id>searchisko:content:id:jbossorg_blog-debezium_0_9_alpha1_and_0_8_1_released</id><updated>2018-07-30T09:36:26Z</updated><published>2018-07-26T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Just two weeks after the Debezium 0.8 release, I’m very happy to announce the release of Debezium &lt;strong&gt;0.9.0.Alpha1&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The main feature of the new version is a first work-in-progress version of the long-awaited Debezium connector for &lt;a href="https://www.microsoft.com/en-us/sql-server"&gt;MS SQL Server&lt;/a&gt;. Based on the &lt;a href="https://docs.microsoft.com/en-us/sql/relational-databases/track-changes/about-change-data-capture-sql-server?view=sql-server-2017"&gt;CDC functionality&lt;/a&gt; available in the Enterprise and Standard editions, the new connector lets you stream data changes out of Microsoft’s popular RDBMS.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Besides that we’ve continued the work on the Debezium &lt;a href="http://debezium.io/docs/connectors/oracle/"&gt;Oracle connector&lt;/a&gt;. Most notably, it supports initial snapshots of captured tables now. We’ve also upgraded Apache Kafka in our Docker images to 1.1.1 (&lt;a href="https://issues.jboss.org/browse/DBZ-829"&gt;DBZ-829&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please take a look at the &lt;a href="http://debezium.io/docs/releases/#release-0-9-0-alpha1"&gt;change log&lt;/a&gt; for the complete list of changes in 0.9.0.Alpha1 and general upgrade notes.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; &lt;span class="line-through"&gt;At the time of writing (2018-07-26), the release artifacts (connector archives) are available on &lt;a href="http://central.maven.org/maven2/io/debezium/"&gt;Maven Central&lt;/a&gt;. We’ll upload the Docker images for 0.9.0.Alpha1 to &lt;a href="https://hub.docker.com/u/debezium/"&gt;Docker Hub&lt;/a&gt; as soon as possible.&lt;/span&gt; The Docker images are already uplodaded and ready for use under tags &lt;code&gt;0.9.0.Alpha1&lt;/code&gt; and rolling &lt;code&gt;0.9&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="sql_server_connector"&gt;&lt;a class="anchor" href="#sql_server_connector"&gt;&lt;/a&gt;SQL Server Connector&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Support for SQL Server had been on the wish list of Debezium users for a long time (the original issue was &lt;a href="https://issues.jboss.org/browse/DBZ-40"&gt;DBZ-40&lt;/a&gt;). Thanks to lots of basic infrastructure created while working on the Oracle connector, we were finally able to come up with a first preview of this new connector in comparatively short time of development.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Just as the Oracle connector, the one for SQL Server is under active development and should be considered an incubating feature at this point. So for instance the structure of emitted change messages may change in upcoming releases. In terms of features, it supports initial snapshotting and capturing changes via SQL Server’s CDC functionality. There’s support for the most common column types, table whitelisting/blacklisting and more. The most significant feature missing is support for structural changes of tables while the connector is running. This is the next feature we’ll work on and it’s planned to be delivered as part of the next 0.9 release (see &lt;a href="https://issues.jboss.org/browse/DBZ-812"&gt;DBZ-812&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’d be very happy to learn about any feedback you may have on this newest connector of the Debezium family. If you spot any bugs or have feature requests for it, please create a report in our &lt;a href="https://issues.jboss.org/browse/DBZ"&gt;JIRA tracker&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="oracle_connector"&gt;&lt;a class="anchor" href="#oracle_connector"&gt;&lt;/a&gt;Oracle Connector&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Debezium connector for Oracle is able to take initial snapshots now. By means of the new connector option &lt;code&gt;snapshot.mode&lt;/code&gt; you can control whether &lt;em&gt;read&lt;/em&gt; events for all the records of all the captured tables should be emitted.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In addition the support for numeric data types has been honed (&lt;a href="https://issues.jboss.org/browse/DBZ-804"&gt;DBZ-804&lt;/a&gt;); any integer columns (i.e. &lt;code&gt;NUMBER&lt;/code&gt; with a scale &amp;lt;\= 0) will be emitted using the corresponding &lt;code&gt;int8&lt;/code&gt;/&lt;code&gt;int16&lt;/code&gt;/&lt;code&gt;int32&lt;/code&gt;/&lt;code&gt;int64&lt;/code&gt; field type, if the columns precision allows for that.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’ve also spent some time on expanding the Oracle &lt;a href="http://debezium.io/docs/connectors/oracle/"&gt;connector documentation&lt;/a&gt;, which covers the structure of emitted change events and all the data type mappings in detail now.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="debezium_0_8_1_final"&gt;&lt;a class="anchor" href="#debezium_0_8_1_final"&gt;&lt;/a&gt;Debezium 0.8.1.Final&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Together with Debezium 0.9.0.Alpha1 we also did another release of the current stable Debezium version 0.8.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;While 0.9 at this point is more interesting to those eager to try out the latest developments in the Oracle and SQL Server connectors, 0.8.1.Final is a recommended upgrade especially to the users of the Postgres connector. This release fixes an issue where it could happen that WAL segments on the server were retained longer than necessary, in case only records of non-whitelisted tables changed for a while. This has been addressed by means of supporting heartbeat messages (as already known from the MySQL connector) also for Postgres (&lt;a href="https://issues.jboss.org/browse/DBZ-800"&gt;DBZ-800&lt;/a&gt;). This lets the connector regularly commit offsets to Kafka Connect which also serves as the hook to acknowledge processed LSNs with the Postgres server.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find the list of all changes done in Debezium 0.8.1.Final in the &lt;a href="http://debezium.io/docs/releases/#release-0-8-1-final"&gt;change log&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what_s_next"&gt;&lt;a class="anchor" href="#what_s_next"&gt;&lt;/a&gt;What’s next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As discussed above, we’ll work on supporting structural changes to captured tables while the SQL Server connector is running. The same applies to the Oracle connector. This will require some work on our DDL parsers, but thanks to the foundations provided by our recent migration of the MySQL DDL parser to Antlr, this should be manageable.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The other big focus of work with be to provide an alternative implementation for getting changes from Oracle which isn’t based on the XStream API. We’ve done some experiments with LogMiner and are also actively exploring further alternatives. While some details are still unclear, we are optimistic to have something to release in this area soon.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you’d like to learn more about some middle and long term ideas, please check out our &lt;a href="http://debezium.io/docs/roadmap/"&gt;roadmap&lt;/a&gt;. Also please get in touch with us if you got any ideas or suggestions for future development.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="about_debezium"&gt;&lt;a class="anchor" href="#about_debezium"&gt;&lt;/a&gt;About Debezium&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Debezium is an open source distributed platform that turns your existing databases into event streams, so applications can see and respond almost instantly to each committed row-level change in the databases. Debezium is built on top of &lt;a href="http://kafka.apache.org/"&gt;Kafka&lt;/a&gt; and provides &lt;a href="http://kafka.apache.org/documentation.html#connect"&gt;Kafka Connect&lt;/a&gt; compatible connectors that monitor specific database management systems. Debezium records the history of data changes in Kafka logs, so your application can be stopped and restarted at any time and can easily consume all of the events it missed while it was not running, ensuring that all events are processed correctly and completely. Debezium is &lt;a href="http://debezium.io/license"&gt;open source&lt;/a&gt; under the &lt;a href="http://www.apache.org/licenses/LICENSE-2.0.html"&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="get_involved"&gt;&lt;a class="anchor" href="#get_involved"&gt;&lt;/a&gt;Get involved&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We hope you find Debezium interesting and useful, and want to give it a try. Follow us on Twitter &lt;a href="https://twitter.com/debezium"&gt;@debezium&lt;/a&gt;, &lt;a href="https://gitter.im/debezium/user"&gt;chat with us on Gitter&lt;/a&gt;, or join our &lt;a href="https://groups.google.com/forum/#!forum/debezium"&gt;mailing list&lt;/a&gt; to talk with the community. All of the code is open source &lt;a href="https://github.com/debezium/"&gt;on GitHub&lt;/a&gt;, so build the code locally and help us improve ours existing connectors and add even more connectors. If you find problems or have ideas how we can improve Debezium, please let us know or &lt;a href="https://issues.jboss.org/projects/DBZ/issues/"&gt;log an issue&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Ll7GuIgNSu0" height="1" width="1" alt=""/&gt;</content><summary>Just two weeks after the Debezium 0.8 release, I’m very happy to announce the release of Debezium 0.9.0.Alpha1! The main feature of the new version is a first work-in-progress version of the long-awaited Debezium connector for MS SQL Server. Based on the CDC functionality available in the Enterprise and Standard editions, the new connector lets you stream data changes out of Microsoft’s popular RD...</summary><dc:creator>Gunnar Morling</dc:creator><dc:date>2018-07-26T00:00:00Z</dc:date><feedburner:origLink>http://debezium.io/blog/2018/07/26/debezium-0-9-0-alpha1-released/</feedburner:origLink></entry></feed>
